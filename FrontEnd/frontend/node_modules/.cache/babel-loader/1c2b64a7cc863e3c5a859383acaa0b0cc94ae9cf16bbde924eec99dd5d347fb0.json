{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jinhy\\\\Desktop\\\\HaruNote_Front\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport signup from \"./assets/signup.png\";\nimport \"./Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [authCode, setAuthCode] = useState(\"\");\n  const [isAuth, setIsAuth] = useState(\"\");\n  const [error, setError] = useState(null); // 에러 상태 추가\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [successMessage, setSuccessMessage] = useState(null); // 성공 메시지 상태\n  const navigate = useNavigate();\n  const handleEmailAuth = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/user/signup/verify-code`);\n      console.log(\"............. \", response.data);\n      // if (response.data.length > 0) {\n      //   const entry = response.data[0]; // 하나의 일기만 있는 경우\n      //   setTitle(entry.title);\n      //   setContent(entry.content);\n      //   setIsPublic(entry.public);\n\n      //   if (response.data[0].fileurl.length === 0) {\n      //     setImage(null);\n      //   } else {\n      //     const imgUrl = `http://localhost:8000/${entry.fileurl[0]}`;\n\n      //     setImage(imgUrl);\n      //   }\n      // }\n    } catch (err) {\n      alert(\"일기 데이터를 가져오는 데 실패했습니다.\");\n    }\n  };\n  const handleSignup = async () => {\n    if (!username || !email || !password) {\n      alert(\"모든 필드를 입력해주세요.\");\n      return;\n    }\n    setError(null); // 기존 에러 초기화\n    setLoading(true); // 요청 중 로딩 상태로 설정\n    setSuccessMessage(null); // 기존 성공 메시지 초기화\n\n    try {\n      const response = await fetch(\"http://localhost:8000/user/Signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.status === 422) {\n        alert(\"이메일 형식에 맞지 않습니다. \\n다시 확인해주세요.\");\n      } else if (response.ok) {\n        alert(\"인증코드를 전송했습니다. \\n이메일을 확인해주세요.\"); // 성공 메시지 출력\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        navigate(\"/signin\");\n      } else {\n        alert(data.detail || \"회원가입에 실패했습니다.\");\n      }\n    } catch (error) {\n      console.error(\"회원가입 오류:\", error);\n      alert(\"서버와 연결할 수 없습니다. 다시 시도해주세요.\");\n    } finally {\n      setLoading(false); // 로딩 상태 종료\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: signup,\n        className: \"signup-img\",\n        alt: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: username,\n          onChange: e => setName(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"name@company.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"passwordInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEmailAuth,\n            className: \"signinButton\",\n            disabled: loading // 로딩 중에는 버튼 비활성화\n            ,\n            children: loading ? \"전송 중...\" : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC778\\uC99D\\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: authCode,\n            onChange: e => setAuthCode(e.target.value),\n            className: \"passwordInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignup,\n            className: \"authButton\",\n            disabled: loading // 로딩 중에는 버튼 비활성화\n            ,\n            children: \"\\xA0Send\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"4uMmrmSKe446dtOmpy7GFAtuzko=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","signup","jsxDEV","_jsxDEV","Signup","_s","username","setName","email","setEmail","password","setPassword","authCode","setAuthCode","isAuth","setIsAuth","error","setError","loading","setLoading","successMessage","setSuccessMessage","navigate","handleEmailAuth","response","axios","get","console","log","data","err","alert","handleSignup","fetch","method","headers","body","JSON","stringify","json","status","ok","detail","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jinhy/Desktop/HaruNote_Front/src/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport signup from \"./assets/signup.png\";\r\nimport \"./Signup.css\";\r\n\r\nconst Signup = () => {\r\n  const [username, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [authCode, setAuthCode] = useState(\"\");\r\n  const [isAuth, setIsAuth] = useState(\"\");\r\n  const [error, setError] = useState(null); // 에러 상태 추가\r\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\r\n  const [successMessage, setSuccessMessage] = useState(null); // 성공 메시지 상태\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailAuth = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:8000/user/signup/verify-code`\r\n      );\r\n\r\n      console.log(\"............. \", response.data);\r\n      // if (response.data.length > 0) {\r\n      //   const entry = response.data[0]; // 하나의 일기만 있는 경우\r\n      //   setTitle(entry.title);\r\n      //   setContent(entry.content);\r\n      //   setIsPublic(entry.public);\r\n\r\n      //   if (response.data[0].fileurl.length === 0) {\r\n      //     setImage(null);\r\n      //   } else {\r\n      //     const imgUrl = `http://localhost:8000/${entry.fileurl[0]}`;\r\n\r\n      //     setImage(imgUrl);\r\n      //   }\r\n      // }\r\n    } catch (err) {\r\n      alert(\"일기 데이터를 가져오는 데 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    if (!username || !email || !password) {\r\n      alert(\"모든 필드를 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    setError(null); // 기존 에러 초기화\r\n    setLoading(true); // 요청 중 로딩 상태로 설정\r\n    setSuccessMessage(null); // 기존 성공 메시지 초기화\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/user/Signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.status === 422) {\r\n        alert(\"이메일 형식에 맞지 않습니다. \\n다시 확인해주세요.\");\r\n      } else if (response.ok) {\r\n        alert(\"인증코드를 전송했습니다. \\n이메일을 확인해주세요.\"); // 성공 메시지 출력\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        navigate(\"/signin\");\r\n      } else {\r\n        alert(data.detail || \"회원가입에 실패했습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"회원가입 오류:\", error);\r\n      alert(\"서버와 연결할 수 없습니다. 다시 시도해주세요.\");\r\n    } finally {\r\n      setLoading(false); // 로딩 상태 종료\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <main className=\"main-container\">\r\n        <img src={signup} className=\"signup-img\" alt=\"description\" />\r\n        <div className=\"container\">\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {successMessage && (\r\n            <div className=\"success-message\">{successMessage}</div>\r\n          )}\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={username}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"name@company.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <div className=\"passwordContainer\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"passwordInput\"\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleEmailAuth}\r\n              className=\"signinButton\"\r\n              disabled={loading} // 로딩 중에는 버튼 비활성화\r\n            >\r\n              {loading ? \"전송 중...\" : \"Sign up\"}\r\n            </button>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"인증코드를 입력해주세요.\"\r\n              value={authCode}\r\n              onChange={(e) => setAuthCode(e.target.value)}\r\n              className=\"passwordInput\"\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleSignup}\r\n              className=\"authButton\"\r\n              disabled={loading} // 로딩 중에는 버튼 비활성화\r\n            >\r\n              &nbsp;Send&nbsp;&nbsp;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}