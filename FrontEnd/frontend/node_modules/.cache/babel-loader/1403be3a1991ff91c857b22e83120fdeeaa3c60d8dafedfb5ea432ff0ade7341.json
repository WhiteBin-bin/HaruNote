{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jinhy\\\\Desktop\\\\HaruNote_Front\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport signup from \"./assets/signup.png\";\nimport \"./Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [authCode, setAuthCode] = useState(\"\");\n  const [error, setError] = useState(null); // 에러 상태 추가\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [isSent, setIsSent] = useState(false); // 전송 완료 상태\n  const [successMessage, setSuccessMessage] = useState(null); // 성공 메시지 상태\n  const navigate = useNavigate();\n  const handleEmailAuth = async () => {\n    if (!username || !email || !password) {\n      alert(\"모든 필드를 입력해주세요.\");\n      return;\n    }\n    try {\n      setLoading(true); // 요청 중 로딩 상태로 설정\n      setIsSent(false);\n      const response = await axios.post(`http://localhost:8000/user/signup/request-code`, {\n        email,\n        password,\n        username\n      });\n      if (response.status === 422) {\n        alert(\"이메일 형식에 맞지 않습니다. \\n다시 확인해주세요.\");\n      } else if (response.status === 200) {\n        setError(null); // 기존 에러 초기화\n        setSuccessMessage(null); // 기존 성공 메시지 초기화\n        setIsSent(true);\n        alert(\"인증코드를 전송했습니다. \\n이메일을 확인해주세요.\");\n      }\n    } catch (err) {\n      alert(\"이메일 전송에 실패했습니다.\");\n    } finally {\n      setLoading(false); // 로딩 상태 종료\n    }\n  };\n  const handleSignup = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8000/user/signup/verify-code?code=${authCode}`);\n      if (response.status === 201) {\n        alert(\"이메일 형식에 맞지 않습니다. \\n다시 확인해주세요.\");\n      } else if (response.ok) {\n        alert(\"회원가입에 성공하였습니다. \\n로그인 해주세요.\");\n        setName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        navigate(\"/signin\");\n      } else {\n        alert(\"회원가입에 실패하였습니다.\");\n      }\n    } catch (error) {\n      console.error(\"회원가입 오류:\", error);\n      alert(\"서버와 연결할 수 없습니다. 다시 시도해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: signup,\n        className: \"signup-img\",\n        alt: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: username,\n          onChange: e => setName(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"name@company.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"passwordContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"passwordInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEmailAuth,\n            className: \"signinButton\",\n            disabled: loading // 로딩 중에는 버튼 비활성화\n            ,\n            children: loading ? \"sending...\" : isSent ? \"complete\" // 전송 완료된 경우\n            : \"Sign up\" // 요청이 완료되지 않았을 때\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uC778\\uC99D\\uCF54\\uB4DC\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: authCode,\n            onChange: e => setAuthCode(e.target.value),\n            className: \"passwordInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSignup,\n            className: \"authButton\",\n            disabled: loading // 로딩 중에는 버튼 비활성화\n            ,\n            children: \"\\xA0Send\\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"alM4IyA8zoDdYbRoPwutdBez50k=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","axios","signup","jsxDEV","_jsxDEV","Signup","_s","username","setName","email","setEmail","password","setPassword","authCode","setAuthCode","error","setError","loading","setLoading","isSent","setIsSent","successMessage","setSuccessMessage","navigate","handleEmailAuth","alert","response","post","status","err","handleSignup","ok","console","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jinhy/Desktop/HaruNote_Front/src/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport signup from \"./assets/signup.png\";\r\nimport \"./Signup.css\";\r\n\r\nconst Signup = () => {\r\n  const [username, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [authCode, setAuthCode] = useState(\"\");\r\n  const [error, setError] = useState(null); // 에러 상태 추가\r\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\r\n  const [isSent, setIsSent] = useState(false); // 전송 완료 상태\r\n  const [successMessage, setSuccessMessage] = useState(null); // 성공 메시지 상태\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailAuth = async () => {\r\n    if (!username || !email || !password) {\r\n      alert(\"모든 필드를 입력해주세요.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true); // 요청 중 로딩 상태로 설정\r\n      setIsSent(false);\r\n\r\n      const response = await axios.post(\r\n        `http://localhost:8000/user/signup/request-code`,\r\n        {\r\n          email,\r\n          password,\r\n          username,\r\n        }\r\n      );\r\n\r\n      if (response.status === 422) {\r\n        alert(\"이메일 형식에 맞지 않습니다. \\n다시 확인해주세요.\");\r\n      } else if (response.status === 200) {\r\n        setError(null); // 기존 에러 초기화\r\n        setSuccessMessage(null); // 기존 성공 메시지 초기화\r\n        setIsSent(true);\r\n        alert(\"인증코드를 전송했습니다. \\n이메일을 확인해주세요.\");\r\n      }\r\n    } catch (err) {\r\n      alert(\"이메일 전송에 실패했습니다.\");\r\n    } finally {\r\n      setLoading(false); // 로딩 상태 종료\r\n    }\r\n  };\r\n\r\n  const handleSignup = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        `http://localhost:8000/user/signup/verify-code?code=${authCode}`\r\n      );\r\n\r\n      if (response.status === 201) {\r\n        alert(\"이메일 형식에 맞지 않습니다. \\n다시 확인해주세요.\");\r\n      } else if (response.ok) {\r\n        alert(\"회원가입에 성공하였습니다. \\n로그인 해주세요.\");\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        navigate(\"/signin\");\r\n      } else {\r\n        alert(\"회원가입에 실패하였습니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"회원가입 오류:\", error);\r\n      alert(\"서버와 연결할 수 없습니다. 다시 시도해주세요.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <main className=\"main-container\">\r\n        <img src={signup} className=\"signup-img\" alt=\"description\" />\r\n        <div className=\"container\">\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {successMessage && (\r\n            <div className=\"success-message\">{successMessage}</div>\r\n          )}\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={username}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"name@company.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className=\"input\"\r\n          />\r\n          <div className=\"passwordContainer\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"passwordInput\"\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleEmailAuth}\r\n              className=\"signinButton\"\r\n              disabled={loading} // 로딩 중에는 버튼 비활성화\r\n            >\r\n              {\r\n                loading\r\n                  ? \"sending...\"\r\n                  : isSent\r\n                  ? \"complete\" // 전송 완료된 경우\r\n                  : \"Sign up\" // 요청이 완료되지 않았을 때\r\n              }\r\n            </button>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"인증코드를 입력해주세요.\"\r\n              value={authCode}\r\n              onChange={(e) => setAuthCode(e.target.value)}\r\n              className=\"passwordInput\"\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleSignup}\r\n              className=\"authButton\"\r\n              disabled={loading} // 로딩 중에는 버튼 비활성화\r\n            >\r\n              &nbsp;Send&nbsp;&nbsp;\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}